{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from \"./ContactForm/ContactForm\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactList } from \"./ContactList/ContactList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.handleAdd = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleAddContact = (name, number) => {\n      // this.state.contacts.map(({contactName}) => contactName.toLowerCase()).includes(name.toLowerCase()) ? \n      // alert(`${name} is already in contacts.`) : \n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [...contacts, {\n            id: nanoid(),\n            contactName: name,\n            contactNumber: number\n          }]\n        };\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState(_ref2 => {\n        let {\n          contacts\n        } = _ref2;\n        return {\n          contacts: contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n\n    const autoFilter = () => {\n      const filteredContacts = contacts.filter(_ref3 => {\n        let {\n          contactName\n        } = _ref3;\n        return contactName.toLowerCase().indexOf(this.state.filter.toLowerCase()) > -1;\n      });\n      return filteredContacts;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: contacts,\n        onSubmitAdd: this.handleAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        onChangeFilter: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filter ? autoFilter() : contacts,\n        filter: filter,\n        onClickDelete: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","nanoid","ContactForm","Filter","ContactList","App","state","contacts","filter","handleAdd","event","name","value","target","setState","handleAddContact","number","id","contactName","contactNumber","handleDelete","contact","render","autoFilter","filteredContacts","toLowerCase","indexOf","padding"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAGA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEjCM,KAFiC,GAEzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFyB;;AAAA,SAOjCC,SAPiC,GAOpBC,KAAD,IAAW;AACrB,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBF,KAAK,CAACG,MAA5B;AACA,WAAKC,QAAL,CAAc;AAAC,SAACH,IAAD,GAAQC;AAAT,OAAd;AACD,KAVgC;;AAAA,SAYjCG,gBAZiC,GAYd,CAACJ,IAAD,EAAOK,MAAP,KAAkB;AACnC;AACA;AACA,WAAKF,QAAL,CAAc,QAAgB;AAAA,YAAf;AAACP,UAAAA;AAAD,SAAe;AAC5B,eAAO;AAACA,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAc;AAACU,YAAAA,EAAE,EAAEhB,MAAM,EAAX;AAAeiB,YAAAA,WAAW,EAAEP,IAA5B;AAAkCQ,YAAAA,aAAa,EAAEH;AAAjD,WAAd;AAAX,SAAP;AAA2F,OAD7F;AAED,KAjBgC;;AAAA,SAmBjCI,YAnBiC,GAmBjBH,EAAD,IAAQ;AACrB,WAAKH,QAAL,CAAc,SAAgB;AAAA,YAAf;AAACP,UAAAA;AAAD,SAAe;AAC5B,eAAO;AAACA,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,MAAT,CAAgBa,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeA,EAA1C;AAAX,SAAP;AAAiE,OADnE;AAED,KAtBgC;AAAA;;AAwBjCK,EAAAA,MAAM,GAAG;AAET,UAAM;AAACf,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAqB,KAAKF,KAAhC;;AAEA,UAAMiB,UAAU,GAAG,MAAM;AACvB,YAAMC,gBAAgB,GAAGjB,QAAQ,CAACC,MAAT,CAAgB,SACzC;AAAA,YAD0C;AAACU,UAAAA;AAAD,SAC1C;AAAC,eAAOA,WAAW,CAACO,WAAZ,GAA0BC,OAA1B,CAAkC,KAAKpB,KAAL,CAAWE,MAAX,CAAkBiB,WAAlB,EAAlC,IAAqE,CAAC,CAA7E;AAA+E,OADvD,CAAzB;AAEA,aAAOD,gBAAP;AACD,KAJD;;AAMA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEpB,QAAvB;AAAiC,QAAA,WAAW,EAAE,KAAKQ;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEP,MAAhB;AAAwB,QAAA,cAAc,EAAE,KAAKC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAED,MAAM,GAAGe,UAAU,EAAb,GAAkBhB,QAA/C;AAAyD,QAAA,MAAM,EAAEC,MAAjE;AAAyE,QAAA,aAAa,EAAE,KAAKY;AAA7F;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQG;;AA1C8B;AA2ClC","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from \"./ContactForm/ContactForm\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactList } from \"./ContactList/ContactList\";\n\n\nexport class App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  handleAdd = (event) => {\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleAddContact = (name, number) => {\n    // this.state.contacts.map(({contactName}) => contactName.toLowerCase()).includes(name.toLowerCase()) ? \n    // alert(`${name} is already in contacts.`) : \n    this.setState(({contacts}) => {\n      return {contacts: [...contacts, {id: nanoid(), contactName: name, contactNumber: number}]}})\n  }\n\n  handleDelete = (id) => {\n    this.setState(({contacts}) => {\n      return {contacts: contacts.filter(contact => contact.id !== id)}})\n  }\n\n  render (){\n  \n  const {contacts, filter} = this.state;\n\n  const autoFilter = () => {\n    const filteredContacts = contacts.filter(({contactName}) => \n    {return contactName.toLowerCase().indexOf(this.state.filter.toLowerCase()) > -1})\n    return filteredContacts;\n  }\n\n  return (\n    <div style={{padding: '50px'}}>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmitAdd={this.handleAddContact}/>\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChangeFilter={this.handleAdd}/> \n      <ContactList contacts={filter ? autoFilter() : contacts} filter={filter} onClickDelete={this.handleDelete}/>\n    </div>\n  );}\n};\n"]},"metadata":{},"sourceType":"module"}