{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from 'components/ContactForm/ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleAdd = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n\n      if (this.props.contacts.map(_ref => {\n        let {\n          contactName\n        } = _ref;\n        return contactName.toLowerCase();\n      }).includes(name.toLowerCase())) {\n        alert(`${name} is already in contacts.`);\n      } else {\n        this.props.onSubmitAdd(name, number);\n        this.setState({\n          name: '',\n          number: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.text,\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Add name\",\n        value: name,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        onChange: this.handleAdd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tel\",\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.text,\n        type: \"tel\",\n        name: \"number\",\n        id: \"tel\",\n        placeholder: \"Add number\",\n        value: number,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        onChange: this.handleAdd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    contactName: PropTypes.string.isRequired,\n    contactNumber: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onSubmitAdd: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","PropTypes","styles","ContactForm","state","name","number","handleAdd","event","value","target","setState","handleSubmit","preventDefault","props","contacts","map","contactName","toLowerCase","includes","alert","onSubmitAdd","render","form","text","button","propTypes","arrayOf","exact","id","string","isRequired","contactNumber","func"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from 'components/ContactForm/ContactForm.module.css'\n\n\nexport class ContactForm extends Component {\n\n    static propTypes = {\n        contacts: PropTypes.arrayOf(PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            contactName: PropTypes.string.isRequired,\n            contactNumber: PropTypes.string.isRequired\n        }).isRequired).isRequired,\n        onSubmitAdd: PropTypes.func.isRequired\n    };\n\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleAdd = (event) => {\n        const {name, value} = event.target;\n        this.setState({[name]: value})\n    }\n\n    handleSubmit =(event) => {\n        event.preventDefault();\n        const {name, number} = this.state;\n        if (this.props.contacts.map(({contactName}) => contactName.toLowerCase()).includes(name.toLowerCase())) { \n            alert(`${name} is already in contacts.`)} \n        else {\n            this.props.onSubmitAdd(name, number);\n            this.setState({\n                name: '',\n                number: ''\n        })}\n    }\n\n    render() {\n        const {name, number} = this.state;\n\n        return <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">Name\n        </label>\n        <input\n        className={styles.text}\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder=\"Add name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={this.handleAdd}\n        required\n        />    \n        <label htmlFor=\"tel\">Number\n        </label>\n        <input\n        className={styles.text}\n        type=\"tel\"\n        name=\"number\"\n        id=\"tel\"\n        placeholder=\"Add number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={this.handleAdd}\n        required\n        />\n        <button className={styles.button} type=\"submit\">Add contact</button>\n    </form>}\n}\n"]},"metadata":{},"sourceType":"module"}